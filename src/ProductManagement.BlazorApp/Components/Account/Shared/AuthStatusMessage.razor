@using ProductManagement.BlazorApp.Components.Account

@if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = GetStatusMessageCssClass(Level);
    <div class="alert @(statusMessageClass)" role="alert">
        @DisplayMessage
    </div>
}

@code {
    private string? messageFromCookie;

    [Parameter]
    public AuthError? Error { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Error?.Message ?? messageFromCookie;

    private MessageLevel Level => Error?.Level ?? MessageLevel.Primary;

    protected override void OnInitialized()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            if (messageFromCookie.StartsWith("Error"))
            {
                Error = new AuthError { Message = messageFromCookie, Level = MessageLevel.Error };
            }

            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }
    }

    private string GetStatusMessageCssClass(MessageLevel level)
    {
        return level switch
        {
            MessageLevel.Primary => "alert-primary",
            MessageLevel.Secondary => "alert-secondary",
            MessageLevel.Success => "alert-success",
            MessageLevel.Error => "alert-danger",
            MessageLevel.Warning => "alert-warning",
            MessageLevel.Info => "alert-info",
            MessageLevel.Light => "alert-light",
            MessageLevel.Dark => "alert-dark",
            _ => "alert-primary",
        };
    }
}
