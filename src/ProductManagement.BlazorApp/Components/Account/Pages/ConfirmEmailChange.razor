@page "/Account/ConfirmEmailChange"

@using System.Text
@using Microsoft.AspNetCore.WebUtilities

@inject ILogger<ConfirmEmailChange> Logger
@inject IdentityRedirectManager RedirectManager
@inject SenderService Sender

<PageTitle>Confirm email change</PageTitle>

<section class="container-md py-3">

    <div class="d-flex gap-3 align-items-center mb-4">
        <PersonFillSvg Height="1.5rem" Width="1.5rem" />
        <h1 class="h2 mb-0">Confirm Email Change</h1>
    </div>

    <StatusMessage Status="@status" />

</section>

@code {
    private StatusModel status = StatusModel.None;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Email is null || Code is null)
        {
            RedirectManager.RedirectToWithStatus("Account/Signin", "Invalid email change confirmation link.", HttpContext);
        }

        var token = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
        var command = new ConfirmEmailChangeCommand(UserId, Email, token);
        var result = await Sender.SendAsync(command);
        if (result.IsSuccess)
        {
            status = new StatusModel("Thank you for confirming your email change.", MessageLevel.Success);
            Logger.LogInformation("User email change confirmed.");
        }
        else
        {
            status = new StatusModel("Error confirming your email change.", MessageLevel.Error);
            Logger.LogWarning("{code}: {message}", result.Error.Code, result.Error.Message);
        }
    }
}
