@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<h3>Change email</h3>
<div class="row mb-4">
    <div class="col-xl-6">
        <StatusMessage Status="@Status" />
        <EditForm Model="Input" FormName="change-email" OnValidSubmit="@OnConfirmCallback" method="post">
            <DataAnnotationsValidator />
            <div class="form-floating mb-3 input-group">
                <input type="text" value="@Email" id="email" class="form-control" placeholder="Enter your email" disabled />
                <div class="input-group-append">
                    <span class="h-100 input-group-text text-success font-weight-bold">✓</span>
                </div>
                <label for="email" class="form-label">Email</label>
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.NewEmail" id="Input.NewEmail" class="form-control" autocomplete="email" aria-required="true" placeholder="Enter a new email" />
                <label for="Input.NewEmail" class="form-label">New email</label>
                <ValidationMessage For="() => Input.NewEmail" class="text-danger" />
            </div>
            <div class="d-flex gap-1">
                <button class="btn btn-outline-dark w-100" type="submit">Update email</button>
                <button class="btn btn-dark w-100" type="button" @onclick="() => ResetChangeEmailForm()">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter] public string? Email { get; set; } = string.Empty;
    [Parameter] public StatusModel Status { get; set; } = StatusModel.None;
    [Parameter] public EventCallback OnConfirmCallback { get; set; }

    [SupplyParameterFromForm]
    private ChangeEmailInputModel Input { get; set; } = new();

    protected override void OnInitialized()
    {
        Input.NewEmail ??= Email;
    }

    private void ResetChangeEmailForm()
    {
        Input.NewEmail ??= Email;
        StateHasChanged();
    }
}
