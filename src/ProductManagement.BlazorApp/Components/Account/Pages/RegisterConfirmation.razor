@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject ILogger<RegisterConfirmation> Logger
@inject IdentityRedirectManager RedirectManager
@inject NavigationManager NavigationManager
@inject ISenderService Sender

<PageTitle>Register confirmation</PageTitle>

<section class="container-md py-3">

    <div class="d-flex gap-3 align-items-center mb-4">
        <PersonFillSvg Height="1.5rem" Width="1.5rem" />
        <h1 class="h2 mb-0">Register Confirmation</h1>
    </div>
    
    <StatusMessage Status="@status" />

</section>

@code {
    private string? emailConfirmationLink;
    private StatusModel status = StatusModel.None;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var query = new GetUserByEmailQuery(Email);
        var result = await Sender.SendAsync(query);
        if (result.IsSuccess)
        {
            Logger.LogInformation("User register confirmation has been sent to their email.");
            status = new StatusModel("Please check your email to confirm your account.", MessageLevel.Success);
        }
        else
        {
            Logger.LogWarning("{code}: {message}", result.Error.Code, result.Error.Message);
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            status = new StatusModel("There was an error during register confirmation.", MessageLevel.Error);
        }
    }
}
