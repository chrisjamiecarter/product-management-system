@implements IDisposable

@inherits LayoutComponentBase

@inject NavigationManager NavigationManager

<Header />
<div class="container-fluid d-md-flex flex-md-grow-1">
    <div class="row flex-md-grow-1">
        <div class="sidebar border border-right col-md-3 col-lg-2 p-0 bg-body-tertiary">
            <div class="offcanvas-md offcanvas-end bg-body-tertiary" tabindex="-1" id="sidebarMenu" aria-labelledby="sidebarMenuLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="sidebarMenuLabel">Company name</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#sidebarMenu" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-md-flex flex-column p-0 pt-md-3 overflow-y-auto">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <NavLink class="nav-link link-dark d-flex align-items-center gap-2" href="" Match="NavLinkMatch.All">
                                @if (currentPage is CurrentPage.Home)
                                {
                                    <HouseFillSvg />
                                }
                                else
                                {
                                    <HouseSvg />
                                }
                                Home
                            </NavLink>
                        </li>
                        <AuthorizeView>
                            <Authorized>
                                <li class="nav-item">
                                    <NavLink class="nav-link link-dark d-flex align-items-center gap-2" href="products">
                                        @if (currentPage is CurrentPage.Products)
                                        {
                                            <CartFillSvg />
                                        }
                                        else
                                        {
                                            <CartSvg />
                                        }
                                        Products
                                    </NavLink>
                                </li>
                                <li class="nav-item">
                                    <NavLink class="nav-link link-dark d-flex align-items-center gap-2" href="users">
                                        @if (currentPage is CurrentPage.Users)
                                        {
                                            <PeopleFillSvg />
                                        }
                                        else
                                        {
                                            <PeopleSvg />
                                        }
                                        Users
                                    </NavLink>
                                </li>
                            </Authorized>
                        </AuthorizeView>
                    </ul>

                    <hr class="my-3">

                    <ul class="nav flex-column mb-auto">
                        <AuthorizeView>
                            <Authorized>
                                <li class="nav-item">
                                    <NavLink class="nav-link link-dark d-flex align-items-center gap-2" href="Account/Manage">
                                        @if (currentPage is CurrentPage.Manage)
                                        {
                                            <PersonGearFillSvg />
                                        }
                                        else
                                        {
                                            <PersonGearSvg />
                                        }
                                        Account
                                    </NavLink>
                                </li>
                                <li class="nav-item">
                                    <form action="Account/Logout" method="post">
                                        <AntiforgeryToken />
                                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                        <button type="submit" class="nav-link link-dark d-flex align-items-center gap-2">
                                            <DoorClosedSvg />
                                            Sign out
                                        </button>
                                    </form>
                                </li>
                            </Authorized>
                            <NotAuthorized>
                                <li class="nav-item">
                                    <NavLink class="nav-link link-dark d-flex align-items-center gap-2" href="Account/Register">
                                        @if (currentPage is CurrentPage.Register)
                                        {
                                            <PersonFillSvg />
                                        }
                                        else
                                        {
                                            <PersonSvg />
                                        }
                                        Register
                                    </NavLink>
                                </li>
                                <li class="nav-item">
                                    <NavLink class="nav-link link-dark d-flex align-items-center gap-2" href="Account/Login">
                                        @if (currentPage is CurrentPage.Signin)
                                        {
                                            <PersonBadgeFillSvg />
                                        }
                                        else
                                        {
                                            <PersonBadgeSvg />
                                        }
                                        Sign in
                                    </NavLink>
                                </li>
                            </NotAuthorized>
                        </AuthorizeView>
                    </ul>
                </div>
            </div>
        </div>

        <main class="col-md-9 ms-sm-auto col-lg-10">

            @Body

        </main>
    </div>
</div>
<script src="js/theme.js"></script>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        currentPage = GetCurrentPage(currentUrl);
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private enum CurrentPage
    {
        Unknown,
        Home,
        Products,
        Users,
        Signin,
        Register,
        Manage
    }

    private CurrentPage currentPage;

    private CurrentPage GetCurrentPage(string page)
    {
        var pageParts = page.Split("/").Select(x => x.Split("?").FirstOrDefault()?.ToLower()).ToArray();
        if (!pageParts.Any())
        {
            return CurrentPage.Home;
        }

        if (pageParts.FirstOrDefault() == "account")
        {
            return pageParts[1] switch
        {
                "login" => CurrentPage.Signin,
                "register" => CurrentPage.Register,
                "manage" => CurrentPage.Manage,
                _ => CurrentPage.Unknown,
            };
        }

        return pageParts.FirstOrDefault()?.ToLower() switch
        {
            "products" => CurrentPage.Products,
            "users" => CurrentPage.Users,
            _ => CurrentPage.Home,
        };
    }
}