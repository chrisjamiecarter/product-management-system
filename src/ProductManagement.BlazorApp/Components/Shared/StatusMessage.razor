@using ProductManagement.BlazorApp.Components.Account

@if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = GetStatusMessageCssClass(Level);
    <div class="alert @(statusMessageClass)" role="alert">
        @DisplayMessage
    </div>
}

@code {
    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    [Parameter]
    public ToastLevel Level { get; set; } = ToastLevel.Info;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override void OnInitialized()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }
    }

    private string GetStatusMessageCssClass(ToastLevel level)
    {
        // if (!string.IsNullOrEmpty(DisplayMessage) && DisplayMessage.StartsWith("Error"))
        // {
        //     return "danger";
        // }

        return level switch
        {
            ToastLevel.Info => "alert-info",
            ToastLevel.Success => "alert-success",
            ToastLevel.Warning => "alert-warning",
            ToastLevel.Error => "alert-danger",
            _ => "alert-primary",
        };
    }
}
